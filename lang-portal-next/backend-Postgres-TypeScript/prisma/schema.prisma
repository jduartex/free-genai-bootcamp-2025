generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Word {
  id            Int              @id @default(autoincrement())
  japanese      String
  romaji        String
  english       String
  parts         Json?
  createdAt     DateTime         @default(now()) @map("created_at")
  updatedAt     DateTime         @updatedAt @map("updated_at")
  reviews       WordReviewItem[]
  groups        WordGroup[]

  @@map("words")
}

model Group {
  id          Int              @id @default(autoincrement())
  name        String
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @updatedAt @map("updated_at")
  words       WordGroup[]
  sessions    StudySession[]
  activities  StudyActivity[]

  @@map("groups")
}

model WordGroup {
  id        Int      @id @default(autoincrement())
  wordId    Int      @map("word_id")
  groupId   Int      @map("group_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  word      Word    @relation(fields: [wordId], references: [id])
  group     Group   @relation(fields: [groupId], references: [id])

  @@map("word_groups")
  @@unique([wordId, groupId])
}

model StudySession {
  id          Int              @id @default(autoincrement())
  groupId     Int              @map("group_id")
  group       Group            @relation(fields: [groupId], references: [id])
  createdAt   DateTime         @default(now()) @map("created_at")
  endedAt     DateTime?        @map("ended_at")
  activities  StudyActivity[]
  reviews     WordReviewItem[]

  @@map("study_sessions")
}

model StudyActivity {
  id              Int           @id @default(autoincrement())
  studySessionId  Int           @map("study_session_id")
  groupId         Int           @map("group_id")
  createdAt       DateTime      @default(now()) @map("created_at")
  studySession    StudySession  @relation(fields: [studySessionId], references: [id])
  group           Group         @relation(fields: [groupId], references: [id])

  @@map("study_activities")
}

model WordReviewItem {
  id              Int           @id @default(autoincrement())
  wordId          Int           @map("word_id")
  studySessionId  Int           @map("study_session_id")
  correct         Boolean
  createdAt       DateTime      @default(now()) @map("created_at")
  word            Word          @relation(fields: [wordId], references: [id])
  studySession    StudySession  @relation(fields: [studySessionId], references: [id])

  @@map("word_review_items")
}
